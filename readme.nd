# AI 角色對話系統

一個基於 Google Gemini API 的智能角色對話系統，讓兩個 AI 角色圍繞指定話題進行自動對話。

## 功能特色

- 🎭 **自訂角色**: 設定任意兩個角色進行對話
- 💬 **智能對話**: 基於 Gemini AI 的自然語言對話
- ⚙️ **靈活控制**: 可調整字數限制和對話輪次
- 🔄 **即時顯示**: 實時展示對話進度和內容
- 🎨 **美觀界面**: 支援深色/淺色主題切換
- 📱 **響應式設計**: 支援桌面和移動設備

## 技術架構

- **前端**: HTML5 + CSS3 + JavaScript (原生)
- **後端**: Node.js + Express.js
- **AI API**: Google Gemini API
- **通信**: Server-Sent Events (SSE)
- **部署**: Render.com

## 快速開始

### 本地開發

1. **克隆項目**
   ```bash
   git clone <your-repo-url>
   cd ai-role-chat
   ```

2. **安裝依賴**
   ```bash
   npm install
   ```

3. **設定環境變數**
   ```bash
   cp .env.example .env
   # 編輯 .env 文件，添加你的 GEMINI_API_KEY
   ```

4. **啟動開發服務器**
   ```bash
   npm run dev
   # 或使用 npm start
   ```

5. **訪問應用**
   ```
   http://localhost:3000
   ```

### 獲取 Gemini API Key

1. 訪問 [Google AI Studio](https://makersuite.google.com/app/apikey)
2. 登入你的 Google 帳號
3. 創建新的 API Key
4. 將 API Key 添加到 `.env` 文件中

## 部署到 Render

### 方法一：使用 render.yaml (推薦)

1. **準備文件**
   - 確保項目根目錄包含 `render.yaml`
   - 將代碼推送到 GitHub

2. **在 Render 創建服務**
   - 登入 [Render](https://render.com)
   - 點擊 "New" -> "Blueprint"
   - 連接你的 GitHub 倉庫
   - Render 會自動讀取 `render.yaml` 配置

3. **設定環境變數**
   - 在 Render 控制台中設定 `GEMINI_API_KEY`
   - 其他環境變數會自動從 `render.yaml` 讀取

### 方法二：手動創建

1. **創建 Web Service**
   - 在 Render 控制台點擊 "New" -> "Web Service"
   - 連接 GitHub 倉庫

2. **配置服務**
   - **Name**: `ai-role-chat`
   - **Runtime**: `Node`
   - **Build Command**: `npm install`
   - **Start Command**: `npm start`
   - **Plan**: `Free` (或選擇付費方案)

3. **設定環境變數**
   ```
   NODE_ENV=production
   GEMINI_API_KEY=your_api_key_here
   ```

4. **部署**
   - 點擊 "Create Web Service"
   - 等待部署完成

## 項目結構

```
ai-role-chat/
├── server.js              # 主服務器文件
├── package.json           # 依賴配置
├── render.yaml           # Render 部署配置
├── .env.example          # 環境變數範例
├── public/
│   └── index.html        # 前端界面
├── README.md             # 項目說明
└── .gitignore           # Git 忽略文件
```

## API 端點

- `GET /` - 前端界面
- `GET /api/health` - 健康檢查
- `GET /api/start-conversation` - 啟動對話 (SSE)

## 使用方法

1. **設定角色**: 輸入兩個角色名稱
2. **設定話題**: 描述想要討論的話題
3. **調整參數**: 選擇字數限制和對話輪次
4. **開始對話**: 點擊開始按鈕，享受 AI 對話

## 技術特點

- **Server-Sent Events**: 實現實時對話流
- **速率限制**: 防止 API 濫用
- **錯誤處理**: 完善的錯誤處理機制
- **響應式設計**: 適配不同屏幕尺寸
- **主題切換**: 支援深色和淺色主題

## 環境變數說明

| 變數名 | 必需 | 說明 |
|--------|------|------|
| `GEMINI_API_KEY` | ✅ | Google Gemini API 密鑰 |
| `PORT` | ❌ | 服務器端口 (默認: 3000) |
| `NODE_ENV` | ❌ | 運行環境 (development/production) |

## 限制說明

- **免費限額**: Gemini API 有每日調用限制
- **速率限制**: 每 5 分鐘最多 3 次對話請求
- **字數限制**: 每次回應 50-500 字
- **輪次限制**: 每次對話 1-20 輪

## 故障排除

### 常見問題

1. **API Key 錯誤**
   - 檢查 `GEMINI_API_KEY` 是否正確設定
   - 確認 API Key 有效且未過期

2. **對話無法啟動**
   - 檢查網路連接
   - 查看瀏覽器開發者工具的錯誤信息

3. **部署失敗**
   - 確認所有必需的文件都已提交
   - 檢查 Render 部署日誌

### 調試模式

本地開發時可以查看詳細日誌：
```bash
NODE_ENV=development npm run dev
```

## 貢獻指南

歡迎提交 Issue 和 Pull Request！

## 授權條款

MIT License

## 更新日誌

### v1.0.0
- 初始版本發布
- 基本角色對話功能
- Render 部署支援